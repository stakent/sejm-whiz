"""Add raw content storage for PDF and HTML with extracted text fields

Revision ID: 4d1a99a5dcc7
Revises: 94ff641a7af5
Create Date: 2025-08-08 20:05:21.995762

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4d1a99a5dcc7"
down_revision: Union[str, Sequence[str], None] = "94ff641a7af5"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "sejm_whiz_amendments",
        "id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_amendments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_cross_references",
        "id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_cross_references",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_document_embeddings",
        "id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_document_embeddings",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.add_column(
        "sejm_whiz_documents",
        sa.Column("pdf_raw_content", sa.LargeBinary(), nullable=True),
    )
    op.add_column(
        "sejm_whiz_documents", sa.Column("html_raw_content", sa.Text(), nullable=True)
    )
    op.add_column(
        "sejm_whiz_documents", sa.Column("pdf_extracted_text", sa.Text(), nullable=True)
    )
    op.add_column(
        "sejm_whiz_documents",
        sa.Column("html_extracted_text", sa.Text(), nullable=True),
    )
    op.add_column(
        "sejm_whiz_documents",
        sa.Column("preferred_source", sa.String(length=10), nullable=True),
    )
    op.alter_column(
        "sejm_whiz_documents",
        "id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_documents",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_documents",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_prediction_models",
        "id",
        existing_type=sa.UUID(),
        server_default=None,
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_prediction_models",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_prediction_models",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=None,
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "sejm_whiz_prediction_models",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_prediction_models",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_prediction_models",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_documents",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_documents",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_documents",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.drop_column("sejm_whiz_documents", "preferred_source")
    op.drop_column("sejm_whiz_documents", "html_extracted_text")
    op.drop_column("sejm_whiz_documents", "pdf_extracted_text")
    op.drop_column("sejm_whiz_documents", "html_raw_content")
    op.drop_column("sejm_whiz_documents", "pdf_raw_content")
    op.alter_column(
        "sejm_whiz_document_embeddings",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_document_embeddings",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_cross_references",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_cross_references",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    op.alter_column(
        "sejm_whiz_amendments",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        server_default=sa.text("now()"),
        existing_nullable=True,
    )
    op.alter_column(
        "sejm_whiz_amendments",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
