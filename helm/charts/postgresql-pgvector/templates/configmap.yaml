apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "postgresql-pgvector.fullname" . }}-init
  labels:
    {{- include "postgresql-pgvector.labels" . | nindent 4 }}
data:
  01-create-extensions.sql: |
    CREATE EXTENSION IF NOT EXISTS vector;
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

    -- Grant permissions for vector operations
    GRANT ALL ON SCHEMA public TO {{ .Values.postgresql.auth.username }};

  02-create-indexes.sql: |
    -- Initial setup complete
    -- Specific indexes will be created by Alembic migrations

  {{- if .Values.postgresql.ssl.enabled }}
  99-enable-ssl.sh: |
    #!/bin/bash
    set -e

    # Generate self-signed SSL certificate
    openssl req -new -x509 -days 365 -nodes -text -out /var/lib/postgresql/data/server.crt \
      -keyout /var/lib/postgresql/data/server.key -subj "/CN=postgresql"

    # Set proper permissions
    chmod 600 /var/lib/postgresql/data/server.key
    chown postgres:postgres /var/lib/postgresql/data/server.key /var/lib/postgresql/data/server.crt

    # Enable SSL in postgresql.conf
    echo "ssl = on" >> /var/lib/postgresql/data/postgresql.conf
    echo "ssl_cert_file = 'server.crt'" >> /var/lib/postgresql/data/postgresql.conf
    echo "ssl_key_file = 'server.key'" >> /var/lib/postgresql/data/postgresql.conf

    # Restart PostgreSQL to apply SSL settings
    pg_ctl reload -D /var/lib/postgresql/data
  {{- end }}
